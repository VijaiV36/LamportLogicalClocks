// Name : Vijai Veeraragavan
// UTA ID: 1001670965
// NetID: vxv0965

//References:-
// 1.https://www.geeksforgeeks.org/multi-threaded-chat-application-set-1/
// 2.https://www.geeksforgeeks.org/multi-threaded-chat-application-set-2/
// 3.https://www.geeksforgeeks.org/java-util-timer-class-java/
// 4.Tanenbaum and van Steen, Chapter 6

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Random;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.Timer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Vijai.V
 */
public class Client extends javax.swing.JFrame {
    static String username; //String to store the username
    static InetAddress ip; // Storing the Inet Address
    static Socket s;//Name of the Socket
    static DataOutputStream dos;//Name of the DataOutputStream
    static DataInputStream dis;//Name of the DataInputStream
    final static int ServerPort = 7654; // initializing the Server Port Number
    static int n; // To store the random number generated
    static String d;// To the Random number as a String, used to display it
    
    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
       // readMessage Thread is used to read any incoming message which is sent to the Client. 
        Thread readMessage = new Thread(new Runnable()  
        { 
            @Override
            public void run() { 
  
                while (true) { 
                    try{
              String msg;
              msg=dis.readUTF();// Message is read
              if(msg.equals("Server Shutdown")){
                  System.exit(0);
              }
              StringTokenizer st =new StringTokenizer(msg,"@");// Received message is split with @ acting as a token
              
              String clientmsg=st.nextToken();// To Store the Client ID and client Message
              String gar=st.nextToken();
              int time=Integer.parseInt(st.nextToken());// to Store the local time of the Sender
              int timeh=Integer.parseInt(jTextField2.getText());// to Store the local time of this current Client
              
            // To Check if any Adjustment is Needed, 
            // if there is then the Adjustment Needed is done according to Lamport's Logical Clock
            // and the local times of both this client and the Sender's
         // if there is no adjustment, then the existing Local Times of both are printed
              if(timeh<time)  {
                  jTextArea1.append("\nAdjustment Needed\n");
                  timeh=time+1;// The local time here is incremented by 1 and adjusted accordingly
                 jTextArea1.append(clientmsg+"Time on Sender's side:"+time+"\nTime adjusted here:"+timeh+"\n");
                 jTextField2.setText(Integer.toString(timeh));
              }
              else
               {
                   jTextArea1.append("\nNo Adjustment Necessary\n");
                   jTextArea1.append(clientmsg+"Time on Sender's side:"+time+"\nTime here:"+timeh+"\n");
               }
                    
                }
                    catch(Exception e){
                            
                            }
                } 
            } 
        });
       readMessage.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter Username");

        jButton1.setText("Add Client");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Send random number to server");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("0");

        jLabel4.setText("Time");

        jTextField2.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(131, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTextField1)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(101, 101, 101)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // The Client registers the username here.
        username = jTextField1.getText();
        if(!username.isEmpty())
        {jTextArea1.append("Welcome "+username);
            try{
                dos.writeUTF(username);// write to the output stream
            }
            catch(Exception e){
                System.out.println(e);
            }}
            else
            {
                JOptionPane.showMessageDialog(null,"Enter a valid Username First");
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // The logout process is done at this event, if a user has logged out of the System, an exit action is performed.
        try {
            String d="logout";
            dos.writeUTF(d);                    // write on the output stream
            jTextArea1.append("\n"+"Client "+jTextField1.getText()+" has been disconnected");
        } catch (IOException e) {
            e.printStackTrace();
        }
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
 // Function for the Logical Clock, which is to be implemented as a counter.
    void timer(int start){
        // Declaration of the Timer class to increment the counter every 1000 milliseconds.
    Timer tx = new Timer(1000,new ActionListener(){
        int cxx=Integer.parseInt(jLabel3.getText());// Initializing the counter with a random number
        @Override
        public void actionPerformed(ActionEvent e) {
            cxx++;// incrementing the counter
            jTextField2.setText(cxx+"");
            if(cxx%5==0) // A Client randomly selects and sends another client a message along with its local time
            {
                int num=(int) (Math.random()*(3));// Random function to generate a number between 0,1,2
                // This is used to select a Client at random
                // cxx contains the local time of this Client
                String finalmsg="Msg#client "+num+"#"+cxx;
                try {
                    // writing the message on the output stream
                    dos.writeUTF(finalmsg);
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            
            }
        
    });
       
       tx.start();// starts the timer
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            Random rand = new Random();
            n= rand.nextInt((10 - 3) + 1) + 3;// random number selection
            d=String.valueOf(n);
            
            jLabel3.setText(d);// display the random generated
            timer(n);
            System.out.println(d+ " is the random number");
            String send;
                        HttpRequest rawHttp = new HttpRequest();
                        // Parse the HttpRequest with the random number
                          send=rawHttp.parseRequest(d,jTextField1.getText());
                          dos.writeUTF(d); // Sending the Random Number
                          dos.writeUTF(send);
                          d=null;
            
        
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnknownHostException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
        ip = InetAddress.getByName("localhost"); 
        s = new Socket(ip, ServerPort); 
        // obtaining input and out streams 
        dis = new DataInputStream(s.getInputStream()); 
        dos = new DataOutputStream(s.getOutputStream()); 
        
   
          
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private static javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
